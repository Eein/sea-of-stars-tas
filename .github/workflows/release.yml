name: Rust - Release

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

  # The project name specified in your Cargo.toml
  PROJECT_NAME: "sea-of-stars-tas"
jobs:
  build:
    # Set the job to run on the platform specified by the matrix below
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write
      # Define the build matrix for cross-compilation
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            # - name: macos-amd64
            #   runner: macos-latest
            #   target: x86_64-apple-darwin
            # - name: macos-arm64
            #   runner: macos-latest
            #   target: aarch64-apple-darwin

            # The steps to run for each matrix item
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "release"

      - name: Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}

      - name: Package Artifacts
        run: |
          src=$(pwd)
          stage=
          case $RUNNER_OS in
          Linux)
          stage=$(mktemp -d)
          ;;
          macOS)
          stage=$(mktemp -d -t tmp)
          ;;
          esac
          cp target/${{ matrix.target }}/release/sysit $stage/
          cd $stage
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          ASSET_NAME="sysit-$RELEASE_VERSION-${{ matrix.target }}.tar.gz"
          ASSET_PATH="$src/$ASSET_NAME"
          echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
          tar czf $ASSET_PATH *
          cd $src   
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET_PATH }}
            ${{ env.CHECKSUM_PATH }}       
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
